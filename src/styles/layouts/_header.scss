@use "../abstracts/breakpoint" as a;

.header {
  // * logo section
  .logo-section {
    background-color: var(--active);
    padding: calc(var(--base-padding) * 3) calc(var(--base-padding) * 2);
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(3, auto);
    gap: calc(var(--base-gap) * 2) 0;
    align-items: flex-start;

    .logo img {
      inline-size: 7em;
      filter: drop-shadow(0 0 2px hwb(var(--shadow) / 0.5));
    }

    .logo-container {
      justify-self: center;
    }

    .contact-container {
      a {
        color: var(--disable);
        transition: opacity 100ms ease;

        &:hover {
          opacity: 0.75;
        }
      }

      span {
        font-size: calc(var(--base-fs) * 1.2);
      }

      i {
        font-size: calc(var(--base-fs) * 1.5);
        margin-right: calc(var(--base-margin) * 0.5);
      }
    }

    .login-btns-container {
      justify-self: flex-end;
    }

    @include a.breakpoint(large) {
      grid-template-columns: 1fr 1.75fr 1.5fr;
      grid-template-rows: auto;
      gap: 0;
      align-items: center;

      .login-btns-container,
      .contact-container {
        justify-self: center;
      }
    }

    @media screen and (width > 62em) {
      grid-template-columns: 0.75fr 2.5fr 2fr;
      padding-block: 0;

      :is(.login-btns-container, .contact-container) {
        flex-direction: row;
        gap: calc(var(--base-gap) * 3);
      }
    }
  }

  // * navigation
  .navigation {
    background-color: var(--primary);
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(2, auto);
    justify-content: flex-start;
    box-shadow: 0 1px 2px hwb(var(--shadow) / 0.4);

    &-toggle-btn-container {
      padding: var(--base-padding) calc(var(--base-padding) * 4);
      padding-block-start: calc(var(--base-padding) * 1.5);
    }

    &-toggle-btn {
      background-color: transparent;
      border: none;
      transition: opacity 100ms ease-in-out;

      i {
        color: var(--tertiary);
        font-size: calc(var(--base-fs) * 1.75);
      }

      &:hover {
        cursor: pointer;
        opacity: 0.7;
      }
    }

    &-menu {
      display: none;
      list-style-type: none;
      padding: calc(var(--base-padding) * 2) calc(var(--base-padding) * 3)
        calc(var(--base-padding) * 3);
    }

    &-link {
      text-transform: capitalize;
      letter-spacing: 0.5px;

      &.active {
        color: var(--secondary);
      }
    }

    @include a.breakpoint(large) {
      grid-template-rows: auto;

      &-toggle-btn-container {
        display: none;
      }

      &-menu {
        display: flex;
        flex-direction: row;
        gap: calc(var(--base-gap) * 3);
        padding-inline: calc(var(--base-padding) * 4);
        padding-block: var(--base-padding);
      }

      &-link {
        padding: calc(var(--base-padding) * 0.5);
      }
    }
  }
}
